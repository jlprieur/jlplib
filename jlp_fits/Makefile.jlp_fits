##############################################################################
# Makefile for jlp_fits.a 
# Linux C++ version 
#
# JLP
# Version: 03-12-2014
##############################################################################

# To check it, type "echo %OS%" on Windows command terminal
ifeq ($(OS),Windows_NT)
JLP_SYSTEM=Windows
else
JLP_SYSTEM=Linux
endif

CFLAGS=-g -Wcomment -Wformat -Wall 

JLPLIB_DIR = ..
CFITSIO_INCL_DIR=$(JLPLIB_DIR)/jlp_cfitsio/incl

##############################################################
ifeq ($(JLP_SYSTEM),Linux)

CPP = g++

# Check if /* is in comments:
# Check correct format in "printf" "scanf", ...
# malloc is needed for Macintosh

LOCAL_FLAGS=-Dunix -DSYSTEM_FIVE -DLINUX -D$(JLP_SYSTEM) \
	-I. -I$(CFITSIO_INCL_DIR) -I/usr/include/malloc

mylib=$(JLPLIB)/jlp

PATHSEP1=/

else
##############################################################
# Windows operating system:
##############################################################

CPP=c++

mylib=c:\\EXEC\\Mylib

# Need two back slashes for Linux compatibility:
PATHSEP1=\\

LOCAL_FLAGS= -D$(JLP_SYSTEM) -I. -I$(CFITSIO_INCL_DIR) 

endif
#######################################################################

#Remove extra blank before $(PATHSEP1):
PATHSEP=$(strip $(PATHSEP1))

EXEC_DIR = $(EXEC)$(PATHSEP)
JLP_FITS_LIB = $(mylib)$(PATHSEP)jlp_fits.a

SRC_FITS_DIR = ./
OBJ_FITS_DIR = ../obj/jlp_fits

# jlp0_spectra_fitsio not working now ...
#	jlp0_fits_utils.cpp jlp0_spectra_fitsio.cpp jlp_string.cpp
FITS_SRC =   jlp0_rdfitsio.cpp jlp0_rdfitsio_utils.cpp jlp_fitsio.cpp \
	jlp_rdfitsio.cpp jlp_wrfitsio.cpp \
	jlp0_wrfitsio.cpp jlp0_fits_utils.cpp jlp0_spectra_fitsio.cpp \
	jlp_string.cpp jlp0_fits_utils.cpp jlp_time0.cpp

FITS_OBJ=$(addprefix $(OBJ_FITS_DIR)/, $(FITS_SRC:.cpp=.o))


.SUFFIXES:
.SUFFIXES: .c .cpp .o $(SUFFIXES) 

# For all cpp files: 
.cpp.o:
	$(CPP) -c $(CFLAGS) $(LOCAL_FLAGS) $*.cpp
	ar r $(JLP_FITS_LIB) $*.o

all: $(FITS_OBJ) 
	ranlib $(JLP_FITS_LIB)

########################################################################
$(OBJ_FITS_DIR)/%.o: $(SRC_FITS_DIR)/%.cpp $(MY_DEPENDENCIES)
	$(CPP) -c $(CFLAGS) $(LOCAL_FLAGS) $(CPP_WXFLAGS) $< -o $@
# -o $(OBJ_FITS_DIR)/$(@F)
# $(@F) : filename of the target without directory:
	ar r $(JLP_FITS_LIB) $@
########################################################################

jlp_time0.o : jlp_time0.cpp jlp_time0.h

jlp_fitsio.o : jlp_fitsio.cpp jlp_fitsio.h

jlp_rdfitsio.o : jlp_rdfitsio.cpp jlp_fitsio.h

jlp0_rdfitsio.o : jlp0_rdfitsio.cpp jlp_fitsio.h

jlp0_fits_utils.o : jlp0_fits_utils.cpp jlp_fitsio.h

jlp_wrfitsio.o : jlp_wrfitsio.cpp jlp_fitsio.h

jlp0_wrfitsio.o : jlp0_wrfitsio.cpp jlp_fitsio.h

jlp0_spectra_fitsio.o : jlp0_spectra_fitsio.cpp jlp_fitsio.h

jlp_string.o : jlp_string.cpp  jlp_string.h 

jlp_test_fits.exe: $(JLP_FITS_LIB) jlp_test_fits.cpp 
	$(CPP) -c $(CFLAGS) jlp_test_fits.cpp
	$(CPP) $(CFLAGS) -o $(EXEC_DIR)jlp_test_fits.exe jlp_test_fits.o \
	     $(JLIB) $(FITSLIB) -lc $(F77LIB) -lm

clear: clean
	rm -f $(JLP_FITS_LIB)

clean:
	rm -f $(FITS_OBJ) 
