##############################################################
# Makefile for jlp_numeric.a
# WINDOWS/Linux version    
#
# JLP
# Version: 02-12-2014
#############################################################

# To check it, type "echo %OS%" on Windows command terminal
ifeq ($(OS),Windows_NT)
JLP_SYSTEM=Windows
else
JLP_SYSTEM=Linux
endif

CFLAGS=-g -Wcomment -Wformat -Wall

JLPLIB_DIR = ..
CFITSIO_INCL_DIR=$(JLPLIB_DIR)/jlp_cfitsio/incl

##############################################################
ifeq ($(JLP_SYSTEM),Linux)

CPP = g++

# Check if /* is in comments:
# Check correct format in "printf" "scanf", ...
# malloc needed for Macintosh

LOCAL_FLAGS=-Dunix -DSYSTEM_FIVE -DLINUX -D$(JLP_SYSTEM) \
        -I. -I$(CFITSIO_INCL_DIR) -I/usr/include/malloc

F77=gfortran
# For SUSE 6.4: -fno_globals to avoid pb with MADRID() ...
#FFLAGS=-g -fno-globals
FFLAGS=-g -Wall -fallow-argument-mismatch

mylib=$(JLPLIB)/jlp

PATHSEP1=/

else
##############################################################
# Windows operating system:
##############################################################

CPP=c++

LOCAL_FLAGS= -D$(JLP_SYSTEM) -I. -I$(CFITSIO_INCL_DIR)

F77=gfortran
FFLAGS=-g -Wall -fallow-argument-mismatch

mylib=c:\\EXEC\\MyLib

# Need two back slashes for Linux compatibility:
PATHSEP1=\\

endif
##############################################################

#Remove extra blank before $(PATHSEP1):
PATHSEP=$(strip $(PATHSEP1))

FFT_DIR=.$(PATHSEP)fft_num$(PATHSEP)
EXEC_DIR = $(EXEC)$(PATHSEP)
JLP_NUM_LIB = $(mylib)$(PATHSEP)jlp_numeric.a

SRC_CPP_NUM_DIR = ./
SRC_FOR_NUM_DIR = ./fft_num/
OBJ_NUM_DIR = ../obj/jlp_numeric

NUM_CPP_SRC = jlp_median.cpp rotate_set.cpp conju_grad.cpp jlp_sort.cpp \
	fit_gauss.cpp fftw_set.cpp fourn.cpp recent_fft.cpp \
	jlp_minimize.cpp jlp_random.cpp jlp_linear_regression.cpp \
	matrix_set.cpp polyfit_utils.cpp

NUM_FOR_SRC = fft_fourn.for fft1_jlp.for fft2.for

NUM_CPP_OBJ=$(addprefix $(OBJ_NUM_DIR)/, $(NUM_CPP_SRC:.cpp=.o))
NUM_FOR_OBJ=$(addprefix $(OBJ_NUM_DIR)/, $(NUM_FOR_SRC:.for=.o))


.SUFFIXES:
.SUFFIXES: .for .o .cpp $(SUFFIXES) 

.for.o:
	runs esoext1 -f $*.for
	$(F77) $(FFLAGS) -c $*.f
	ar r $(JLP_NUM_LIB) $*.o
	rm $*.f

.cpp.o:
	$(CPP) -c $(CFLAGS) $(LOCAL_FLAGS) $*.cpp
	ar r $(JLP_NUM_LIB) $*.o

all: $(NUM_CPP_OBJ) $(NUM_FOR_OBJ) 
	ranlib $(JLP_NUM_LIB) 

########################################################################
$(OBJ_NUM_DIR)/%.o: $(SRC_CPP_NUM_DIR)/%.cpp $(MY_DEPENDENCIES)
	$(CPP) -c $(CFLAGS) $(LOCAL_FLAGS) $(CPP_WXFLAGS) $< -o $@
# -o $(OBJ_FITS_DIR)/$(@F)
# $(@F) : filename of the target without directory:
	ar r $(JLP_NUM_LIB) $@
$(OBJ_NUM_DIR)/%.o: $(SRC_FOR_NUM_DIR)/%.for $(MY_DEPENDENCIES)
	$(F77) -c $(FFLAGS) $< -o $@
	ar r $(JLP_NUM_LIB) $@
########################################################################

conju_grad.o : conju_grad.c 

fit_gauss.o : fit_gauss.c 

jlp_sort.o: jlp_sort.c

jlp_minimize.o: jlp_minimize.c

jlp_random.o: jlp_random.c

matrix_set.o: matrix_set.c

polyfit_utils.o : polyfit_utils.c 

rotate_set.o : rotate_set.cpp

jlp_median.o : jlp_median.cpp

############# FFT/C:

fftw_set.o : $(FFT_DIR)fftw_set.c
	$(CC) -c $(CFLAGS) $(INCL) -o fftw_set.o $(FFT_DIR)fftw_set.c
	ar r $(JLP_NUM_LIB) fftw_set.o

fourn.o : $(FFT_DIR)fourn.c
	$(CC) -c $(CFLAGS) $(INCL) -o fourn.o $(FFT_DIR)fourn.c
	ar r $(JLP_NUM_LIB) fourn.o

recent_fft.o : $(FFT_DIR)recent_fft.c
	$(CC) -c $(CFLAGS) $(INCL) -o recent_fft.o $(FFT_DIR)recent_fft.c
	ar r $(JLP_NUM_LIB) recent_fft.o

############## FFT Fortran:
fft_fourn.o : $(FFT_DIR)fft_fourn.for
	$(F77) -c $(FFLAGS) $(INCL) -o fft_fourn.o $(FFT_DIR)fft_fourn.for
	ar r $(JLP_NUM_LIB) fft_fourn.o

fft1_jlp.o : $(FFT_DIR)fft1_jlp.for
	$(F77) -c $(FFLAGS) $(INCL) -o fft1_jlp.o $(FFT_DIR)fft1_jlp.for
	ar r $(JLP_NUM_LIB) fft1_jlp.o

fft2.o : $(FFT_DIR)fft2.for
	$(F77) -c $(FFLAGS) $(INCL) -o fft2.o $(FFT_DIR)fft2.for
	ar r $(JLP_NUM_LIB) fft2.o

#####################################################################
#### EXE:

conju_grad.exe : conju_grad.c 
	$(CC) -c $(CFLAGS) -DMAIN_PROG conju_grad.c
	$(CC) -g -o $(EXEC_DIR)conju_grad.exe conju_grad.o $(JLIB) -lm

mat1.exe: mat1.c
	$(CC) -c $(CFLAGS) mat1.c
	$(CC) -g -o $(EXEC_DIR)mat1.exe mat1.o $(JLIB) -lm

#####################################################################

clean:
	rm -f $(NUM_CPP_OBJ) $(NUM_FOR_OBJ)

clear: clean 
	rm -f $(JLP_NUM_LIB) 
